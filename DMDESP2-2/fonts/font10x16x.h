

/*
 * Fareed Read
 * http://www.facebook.com/fareedreads
 *
 * font10x16x
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : font10x16x.h
 * Date                : 02.11.2019
 * Font size in bytes  : 1616
 * Font width          : 10
 * Font height         : -16
 * Font first char     : 48
 * Font last char      : 58
 * Font used chars     : 10
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
//#include <avr/pgmspace.h>

#ifndef font10x16x_H
#define font10x16x_H

#define font10x16x_WIDTH 10
#define font10x16x_HEIGHT 16

const static uint8_t font10x16x[] PROGMEM = {
    0x06, 0x50, // size
    0x0A, // width
    0x10, // height
    0x2E, // first char
    0x0D, // char count
    
    // char widths
    0x04,0x04,0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,0x03,
    
    
   // font data
   
     0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, // 46

    0x00, 0x80, 0xF8, 0x3E, 0x18, 0x1F, 0x01, 0x00, // 47
    0xFE, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0x7F, // 48
    0x00, 0x00, 0x04, 0x06, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0xC0, 0xC0, 0x00, // 49
    0x0E, 0x0F, 0x0F, 0x03, 0x03, 0x03, 0x83, 0xFF, 0xFF, 0x7E, 0xE0, 0xF0, 0xF8, 0xDC, 0xCE, 0xC7, 0xC3, 0xC1, 0xC0, 0xC0, // 50
    0x0E, 0x0F, 0x0F, 0x83, 0x83, 0x83, 0x83, 0xFF, 0xFF, 0x7E, 0x70, 0xF0, 0xF0, 0xC1, 0xC1, 0xC1, 0xC1, 0xFF, 0xFF, 0x7E, // 51
    0x00, 0x80, 0xE0, 0xF0, 0x3C, 0x0E, 0xFF, 0xFF, 0xFF, 0x00, 0x1E, 0x1F, 0x1F, 0x18, 0x18, 0x98, 0xFF, 0xFF, 0xFF, 0x98, // 52
    0x7F, 0x7F, 0x7F, 0x63, 0x63, 0x63, 0x63, 0xE3, 0xE3, 0xC3, 0x70, 0xF0, 0xF0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0x7F, // 53
    0xFE, 0xFF, 0xFF, 0x83, 0x83, 0x83, 0x83, 0x8F, 0x8F, 0x0E, 0x7F, 0xFF, 0xFF, 0xC1, 0xC1, 0xC1, 0xC1, 0xFF, 0xFF, 0x7F, // 54
    0x03, 0x03, 0x03, 0x83, 0xC3, 0xE3, 0x73, 0x3B, 0x1F, 0x0F, 0xE0, 0xF8, 0xFE, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, // 55
    0x7E, 0xFF, 0xFF, 0x83, 0x83, 0x83, 0x83, 0xFF, 0xFF, 0x7E, 0x7E, 0xFF, 0xFF, 0xC1, 0xC1, 0xC1, 0xC1, 0xFF, 0xFF, 0x7E, // 56
    0xFE, 0xFF, 0xFF, 0x83, 0x83, 0x83, 0x83, 0xFF, 0xFF, 0xFE, 0x70, 0xF1, 0xF1, 0xC1, 0xC1, 0xC1, 0xC1, 0xFF, 0xFF, 0x7F, // 57
	0x20, 0x70, 0x20, 0x04, 0x0E, 0x04, // 58
    
};

#endif
