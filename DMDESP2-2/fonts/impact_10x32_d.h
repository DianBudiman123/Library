

/*
 * Budiman
 * http://www.facebook.com/Budiman
 *
 * impact_10x32_32
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : impact_10x32_d.h
 * Date                : 01.11.2021
 * Font size in bytes  : 4501
 * Font width          : 10
 * Font height         : -32
 * Font first char     : 44
 * Font last char      : 59
 * Font used chars     : 15
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

//#include <inttypes.h>
//#include <avr/pgmspace.h>

#include <inttypes.h>
#ifdef __AVR__
#include <avr/pgmspace.h>
#elif defined (ESP8266)
#include <pgmspace.h>
#else
#define PROGMEM
#endif



#ifndef IMPACT_10X32_32_H
#define IMPACT_10X32_32_H

#define IMPACT_10X32_32_WIDTH 10
#define IMPACT_10X32_32_HEIGHT -32

const static uint8_t impact_10x32_d[] PROGMEM = {
    0x11, 0x95, // size
    0x0A, // width
    0x20, // height asalnya 0xE0
    0x2C, // first char
    0x0F, // char count
    
    // char widths
    0x04, 0x0A, 0x04, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0C, 0x0A, 
    0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 
    
    // font data
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xB8, 0xF8, 0x78, // 44
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 45
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xF8, // 46
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x80, 0xF0, 0xFE, 0x7F, 0x0F, 0x01, 0x00, 0x00, 0xE0, 0xFC, 0xFF, 0x1F, 0x03, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 47
    0xFC, 0xFE, 0xFF, 0x0F, 0x07, 0x07, 0x0F, 0xFF, 0xFE, 0xFC, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x3F, 0x7F, 0xFF, 0xE0, 0xC0, 0xC0, 0xE0, 0xFF, 0x7F, 0x3F, // 48
    0x00, 0x18, 0x1C, 0x1E, 0x1F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, // 49
    0x7E, 0x7E, 0x7F, 0x0F, 0x07, 0x07, 0x0F, 0xFF, 0xFE, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xE0, 0xF0, 0xF8, 0xFC, 0x7E, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, // 50
    0xFC, 0xFE, 0xFF, 0x0F, 0x07, 0x07, 0x0F, 0xFF, 0xFE, 0xFC, 0x03, 0x03, 0x03, 0x80, 0xC0, 0xC0, 0xE0, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0xFF, 0xFF, 0xFE, 0x3F, 0x7F, 0xFF, 0xE0, 0xC0, 0xC0, 0xE0, 0xFF, 0x7F, 0x3F, // 51
    0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0x7C, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x03, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x7F, 0x7F, 0x7F, 0x70, 0x70, 0x70, 0x70, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, // 52
    0xFF, 0xFF, 0xFF, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x7F, 0x7F, 0x7F, 0x78, 0x78, 0x78, 0xF8, 0xF8, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x7E, 0x7E, 0xFE, 0xE0, 0xC0, 0xC0, 0xE0, 0xFF, 0x7F, 0x3F, // 53
    0xFC, 0xFE, 0xFF, 0x0F, 0x07, 0x07, 0x0F, 0x3F, 0x3E, 0x3C, 0xFF, 0xFF, 0xFF, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xE0, 0xC0, 0xFF, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x03, 0xFF, 0xFF, 0xFF, 0x3F, 0x7F, 0xFF, 0xF0, 0xE0, 0xE0, 0xF0, 0xFF, 0x7F, 0x3F, // 54
    0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFF, 0x7F, 0x3F, 0xFE, 0xFF, 0xFF, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 55
    0xFC, 0xFE, 0xFF, 0x07, 0x07, 0x07, 0x0F, 0xFF, 0xFE, 0xFC, 0x3F, 0x7F, 0xFF, 0xE0, 0xC0, 0xC0, 0xE0, 0xFF, 0x7F, 0x3F, 0xFE, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x03, 0xFF, 0xFF, 0xFE, 0x3F, 0x7F, 0xFF, 0xF0, 0xE0, 0xE0, 0xF0, 0xFF, 0x7F, 0x3F, // 56
    0xFC, 0xFE, 0xFF, 0x0F, 0x07, 0x07, 0x0F, 0xFF, 0xFE, 0xFC, 0x1F, 0x3F, 0x7F, 0xF0, 0xE0, 0xE0, 0xF0, 0xFF, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x3F, 0x7F, 0xFF, 0xF0, 0xE0, 0xE0, 0xF0, 0xFF, 0x7F, 0x3F, // 57
    0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00 // 58
    
};

#endif
